{"version":3,"sources":["actions/types.js","actions/date.js","nbaApi.js","actions/lineups.js","actions/players.js","actions/all.js","actions/budget.js","PlayerPerformance.js","HomeLineup.js","HomeLineupList.js","actions/stats.js","Calculate.js","Home.js","actions/games.js","Game.js","GameList.js","Player.js","LineupPlayer.js","Lineup.js","Search.js","PlayerList.js","EditLineupPlayerList.js","Routes.js","App.js","reportWebVitals.js","reducers/date.js","reducers/games.js","reducers/players.js","reducers/lineups.js","reducers/budget.js","reducers/stats.js","reducers/all.js","reducers/rootReducer.js","index.js"],"names":["LOAD_DATE","LOAD_GAMES","GET_ALL","RESET_PLAYERS","GET_GAMES_ON_DATE","GET_PLAYERS_ON_DATE","GET_PLAYER_BY_NAME","SEARCH_PLAYER","GET_PLAYER_IMAGE","ADD_TO_LINEUP","REMOVE_FROM_LINEUP","GET_LINEUPS_ON_DATE","GET_PLAYERS_BY_LINEUP_ID","ADD_LINEUP_TO_DB","EDIT_LINEUP","SAVE_CURRENT_LINEUP_ID","REMOVE_LINEUP_FROM_DB","UPDATE_LINEUP_SCORES","RESET_LINEUP","DEDUCT_BUDGET","REFUND_BUDGET","RESET_BUDGET","GET_PLAYER_STATS","GET_ALL_STATS_AND_SCORES","RESET_PLAYER_STATS","RESET_ALL","loadDate","date","type","payload","BASE_API_URL","process","nbaApi","endpoint","paramsOrData","verb","console","debug","axios","method","url","data","error","response","message","Array","isArray","query","this","request","res","games","players","name","lineup","body","log","id","lineups","everything","scores","stats","playerStats","playerImage","getLineupsOnDate","dispatch","a","updateLineupScoreThunk","gotPlayersByLineupId","removeLineupFromDB","removeFromLineup","player","resetLineup","addLineupToDB","writeLineupToDB","editLineup","updateLineup","getPlayersOnDateFromAPI","getPlayersOnDate","playersOnDate","gotPlayersOnDate","gotPlayerImage","resetPlayers","gotAll","deductBudget","budget","refundBudget","resetBudget","PlayerPerformance","useDispatch","playerStat","useSelector","st","image","useEffect","getPlayerImage","Card","className","Img","src","alt","Body","Title","ListGroup","Item","pts","reb","ast","stl","blk","turnover","style","color","score","HomeLineup","lineupScore","lineupScores","history","useHistory","Date","year","split","month","day","fullDate","key","includes","push","map","uuid","total_value","onClick","getAll","getPlayersByLineupId","deleteLineupFromDB","HomeLineupList","lineupsOnDate","gotAllStatsAndScore","Calculate","getAllPerformance","getAllStatsAndScores","getScores","updateLineupScores","Home","useState","startDate","setStartDate","dummy","getFullYear","getMonth","getDate","selected","onChange","to","gotGames","Game","visitor_team","full_name","visitorteam_logo","width","height","home_team","hometeam_logo","GameList","missing","getGames","getGamesFromAPI","game","Player","button","playersInLineup","currentLineup","arr","length","i","check","value","points","rebounds","assists","steals","blocks","turnovers","team","LineupPlayer","Lineup","editting","lineupId","currentLineupId","Search","playerName","lowerValueBound","upperValueBound","formData","setFormData","search","e","target","criteria","searchPlayer","min","max","PlayerList","allPlayers","searchedPlayers","EditLineupPlayerList","all","Routes","exact","path","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","INITIAL_STATE","state","action","lowerCaseSearchTerm","toLowerCase","playersWithNameMatch","filter","playersWithinValueRange","searchedPlayer","newLineupsOnDate","lineupCopy","idx","modLineup","slice","concat","currentBudget","teams","combineReducers","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e4ee4eab.chunk.js","sourcesContent":["export const LOAD_DATE = \"LOAD_DATE\";\r\nexport const LOAD_GAMES = \"LOAD_GAMES\";\r\nexport const GET_ALL = \"GET_ALL\";\r\nexport const RESET_PLAYERS = \"RESET_PLAYERS\";\r\nexport const GET_GAMES_ON_DATE = \"GET_GAMES_ON_DATE\";\r\nexport const GET_PLAYERS_ON_DATE = \"GET_PLAYERS_ON_DATE\";\r\nexport const GET_PLAYER_BY_NAME = \"GET_PLAYER_BY_NAME\";\r\nexport const SEARCH_PLAYER = \"SEARCH_PLAYER\";\r\n// export const SEARCH_PLAYER_BY_LOWER_VALUE = \"SEARCH_PLAYER_BY_LOWER_VALUE\";\r\nexport const GET_PLAYER_IMAGE = \"GET_PLAYER_IMAGE\";\r\nexport const ADD_TO_LINEUP = \"ADD_TO_LINEUP\";\r\nexport const REMOVE_FROM_LINEUP = \"REMOVE_FROM_LINEUP\";\r\nexport const GET_LINEUPS_ON_DATE = \"GET_LINEUPS_ON_DATE\";\r\nexport const GET_PLAYERS_BY_LINEUP_ID = \"GET_PLAYERS_BY_LINEUP_ID\";\r\nexport const ADD_LINEUP_TO_DB = \"ADD_LINEUP_TO_DB\";\r\nexport const EDIT_LINEUP = \"EDIT_LINEUP\";\r\nexport const SAVE_CURRENT_LINEUP_ID = \"SAVE_CURRENT_LINEUP_ID\";\r\nexport const REMOVE_LINEUP_FROM_DB = \"REMOVE_LINEUP_FROM_DB\";\r\nexport const UPDATE_LINEUP_SCORES = \"UPDATE_LINEUP_SCORES\";\r\nexport const RESET_LINEUP = \"RESET_LINEUP\";\r\nexport const DEDUCT_BUDGET = \"DEDUCT_BUDGET\";\r\nexport const REFUND_BUDGET = \"REFUND_BUDGET\";\r\nexport const RESET_BUDGET = \"RESET_BUDGET\";\r\nexport const GET_PLAYER_STATS = \"GET_PLAYER_STATS\";\r\nexport const GET_ALL_STATS_AND_SCORES = \"GET_ALL_STATS_AND_SCORES\";\r\nexport const RESET_PLAYER_STATS = \"RESET_PLAYER_STATS\";\r\nexport const RESET_ALL = \"RESET_ALL\";","import {LOAD_DATE} from \"./types\";\r\n\r\nexport function loadDate(date) {\r\n    return {\r\n        type: LOAD_DATE,\r\n        payload:date\r\n    };\r\n};","import axios from \"axios\";\r\n\r\nconst BASE_API_URL = process.env.REACT_APP_BASE_URL || \"http://localhost:3001\";\r\n// const BASE_API_URL = `localhost:${process.env.PORT}` || `http://localhost:3001`;\r\n\r\nclass nbaApi {\r\n    static async request(endpoint, paramsOrData = {}, verb = \"get\") {\r\n        console.debug(\"backend API Call:\", endpoint, paramsOrData, verb);\r\n        try {\r\n            return (await axios({\r\n                method: verb,\r\n                url: `${BASE_API_URL}/${endpoint}`,\r\n                [verb === \"get\" ? \"params\" : \"data\"]: paramsOrData\r\n            })).data;\r\n            // axios sends query string data via the \"params\" key,\r\n            // and request body data via the \"data\" key,\r\n            // so the key we need depends on the HTTP verb\r\n        }\r\n\r\n        catch (err) {\r\n            console.error(\"API Error:\", err.response);\r\n            let message = err.response.data.message;\r\n            throw Array.isArray(message) ? message : [message];\r\n        }\r\n    }\r\n\r\n    //This function also \"clear and write\" games into DB\r\n    static async getGames(query) {\r\n        const res = await this.request(`games`, query);\r\n        return res.games;\r\n    }\r\n\r\n    //This function only get the games detail from DB\r\n    static async getGamesOnDate(date) {\r\n        const res = await this.request(`games/onDate`, date);\r\n        return res.games;\r\n    }\r\n\r\n    static async getPlayersOnDate(query) {\r\n        const res = await this.request(`players/onDate`, query);\r\n        return res.players;\r\n    }\r\n\r\n    static async getPlayerByName(name) {\r\n        const res = await this.request(`players/${name}`, name);\r\n        return res.players[0];\r\n    }\r\n\r\n    static async writeLineupToDB(lineup, date) {\r\n        const body = { lineup: lineup, date: date };\r\n        const message = await this.request(`lineups`, body, \"post\");\r\n        console.log(\"Written in DB in nbaApi!!\", message);\r\n        return message;\r\n    }\r\n\r\n    static async updateLineup(id, lineup, date) {\r\n        const body = { lineup: lineup, date: date };\r\n        const message = await this.request(`lineups/edit/${id}`, body, \"post\");\r\n        return message;\r\n    }\r\n\r\n    static async getLineupsOnDate(date) {\r\n        console.log(\"getLineupsOnDate\");\r\n        console.debug(\"getLineupsOnDate\");\r\n        const lineups = await this.request(`lineups/onDate`, date);\r\n        return lineups;\r\n    }\r\n\r\n    static async getPlayersByLineupId(id) {\r\n        const res = await this.request(`lineups/${id}/players`, id);\r\n        return res.players;\r\n    }\r\n\r\n    static async deleteLineupFromDB(id) {\r\n        const message = await this.request(`lineups/${id}`, id, \"delete\");\r\n        // console.log(\"deleted in nbaApi!!\", message);\r\n        return message;\r\n    }\r\n\r\n    static async getAll(query) {\r\n        const everything = await this.request(`all`, query);\r\n        // console.log(\"everything in nbaApi\", everything);\r\n        return everything;\r\n    }\r\n\r\n    static async getScores(date) {\r\n        const res = await this.request(`scores`, { date });\r\n        console.log(\"scores and ids in getScores nbaApi\", res.scores);\r\n        return res.scores;\r\n    }\r\n\r\n    static async getPerformance(name, date) {\r\n        const res = await this.request(`scores/${name}/performance`, { date });\r\n        return res.stats;\r\n    }\r\n\r\n    static async getAllPerformance(date) {\r\n        const res = await this.request(`scores/all-performance`, { date });\r\n        return res.playerStats;\r\n    }\r\n\r\n    static async getPlayerImage(name) {\r\n        const res = await this.request(`players/${name}/image`);\r\n        return res.playerImage;\r\n    }\r\n}\r\n\r\nexport default nbaApi;","import {\r\n    GET_LINEUPS_ON_DATE,\r\n    GET_PLAYERS_BY_LINEUP_ID,\r\n    SAVE_CURRENT_LINEUP_ID,\r\n    EDIT_LINEUP,\r\n    UPDATE_LINEUP_SCORES,\r\n    ADD_TO_LINEUP,\r\n    ADD_LINEUP_TO_DB,\r\n    REMOVE_LINEUP_FROM_DB,\r\n    REMOVE_FROM_LINEUP,\r\n    RESET_LINEUP} from \"./types\";\r\nimport nbaApi from \"../nbaApi\";\r\n\r\n\r\nfunction getLineupsOnDate(date) {\r\n    return async function (dispatch) {\r\n    const res = await nbaApi.getLineupsOnDate(date);\r\n    dispatch(getLineupsFromDB(res.lineups));\r\n  };\r\n}\r\n\r\nfunction getLineupsFromDB(lineups) {\r\n    return {\r\n        type: GET_LINEUPS_ON_DATE,\r\n        payload : lineups\r\n    }\r\n}\r\n\r\nfunction updateLineupScores(date) {\r\n    return async function (dispatch) {\r\n        const scores = await nbaApi.getScores(date);\r\n        dispatch(updateLineupScoreThunk(scores));\r\n    }\r\n}\r\n\r\nfunction updateLineupScoreThunk(scores) {\r\n    return {\r\n        type: UPDATE_LINEUP_SCORES,\r\n        payload: scores\r\n    }\r\n}\r\n\r\nfunction getPlayersByLineupId(id) {\r\n    return async function (dispatch) {\r\n    const players = await nbaApi.getPlayersByLineupId(id);\r\n    dispatch(gotPlayersByLineupId(players));\r\n  };\r\n}\r\n\r\nfunction gotPlayersByLineupId(players) {\r\n    return {\r\n        type: GET_PLAYERS_BY_LINEUP_ID,\r\n        payload : players\r\n    }\r\n}\r\n\r\nfunction removeLineup(id) {\r\n    return async function (dispatch) {\r\n        await nbaApi.deleteLineupFromDB(id);\r\n        dispatch(removeLineupFromDB(id))\r\n    }\r\n}\r\n\r\nfunction removeLineupFromDB(id) {\r\n    return {\r\n        type: REMOVE_LINEUP_FROM_DB,\r\n        payload: id\r\n    }\r\n}\r\n\r\nfunction addToLineup(player) {\r\n    return {\r\n        type: ADD_TO_LINEUP,\r\n        payload: player\r\n    }\r\n}\r\n\r\nfunction removeFromLineup(player) {\r\n    return {\r\n        type: REMOVE_FROM_LINEUP,\r\n        payload:player\r\n    }\r\n}\r\n\r\nfunction resetLineup() {\r\n    return {\r\n        type: RESET_LINEUP\r\n    }\r\n}\r\n\r\nfunction saveCurrentLineupId(id) {\r\n    return {\r\n        type: SAVE_CURRENT_LINEUP_ID,\r\n        payload: id\r\n    }\r\n}\r\n\r\nfunction addLineupToDB(lineup, date) {\r\n  return async function (dispatch) {\r\n    await nbaApi.writeLineupToDB(lineup, date);\r\n    dispatch(addLineupToDBThunk());\r\n  };\r\n}\r\n\r\nfunction addLineupToDBThunk() {\r\n  return { type: ADD_LINEUP_TO_DB};\r\n}\r\n\r\nfunction editLineup(id, lineup, date) {\r\n    return async function (dispatch) {\r\n        await nbaApi.updateLineup(id, lineup, date);\r\n        dispatch(editLineupThunk());\r\n    }\r\n}\r\n\r\nfunction editLineupThunk() {\r\n    return{type : EDIT_LINEUP}\r\n}\r\n\r\nexport {\r\n    addToLineup,\r\n    removeFromLineup,\r\n    editLineup,\r\n    resetLineup,\r\n    addLineupToDB,\r\n    getLineupsOnDate,\r\n    getPlayersByLineupId,\r\n    saveCurrentLineupId,\r\n    updateLineupScores,\r\n    removeLineup\r\n}","import {\r\n  GET_PLAYERS_ON_DATE,\r\n  GET_PLAYER_BY_NAME,\r\n  GET_PLAYER_IMAGE,\r\n  SEARCH_PLAYER,\r\n  RESET_PLAYERS\r\n} from \"./types\";\r\nimport nbaApi from \"../nbaApi\";\r\n\r\nfunction searchPlayer(criteria) {\r\n  return {\r\n    type: SEARCH_PLAYER,\r\n    payload: criteria\r\n  }\r\n}\r\n\r\n// function searchPlayerByLowerValue(value) {\r\n//   return {\r\n//     type: SEARCH_PLAYER_BY_LOWER_VALUE,\r\n//     payload: value\r\n//   }\r\n// }\r\n\r\n/** Utilize redux-thunk to asynchronously get the data from\r\n *  nbaApi then create an LOAD_GAME action with the payload of data from nbaApi */\r\nfunction getPlayersOnDateFromAPI(date) {\r\n  return async function (dispatch) {\r\n    const playersOnDate = await nbaApi.getPlayersOnDate({ \"dates[]\": date });\r\n    dispatch(gotPlayersOnDate(playersOnDate));\r\n  };\r\n}\r\n\r\n\r\nfunction gotPlayersOnDate(playersOnDate) {\r\n  return { type: GET_PLAYERS_ON_DATE, payload: playersOnDate };\r\n}\r\n\r\nfunction getPlayerByName(name) {\r\n  return async function (dispatch) {\r\n    const player = await nbaApi.getPlayerByName(name);\r\n    dispatch(gotPlayerByName(player));\r\n  };\r\n}\r\n\r\n\r\nfunction gotPlayerByName(player) {\r\n  return { type: GET_PLAYER_BY_NAME, payload: player };\r\n}\r\n\r\nfunction getPlayerImage(name) {\r\n  return async function (dispatch) {\r\n    const playerImage = await nbaApi.getPlayerImage(name);\r\n    dispatch(gotPlayerImage(playerImage));\r\n  }\r\n}\r\n\r\nfunction gotPlayerImage(playerImage) {\r\n  return {\r\n    type: GET_PLAYER_IMAGE,\r\n    payload: playerImage\r\n  }\r\n}\r\n\r\nfunction resetPlayers() {\r\n  return {\r\n    type:RESET_PLAYERS\r\n  }\r\n}\r\n\r\n\r\nexport {\r\n  getPlayersOnDateFromAPI,\r\n  getPlayerByName,\r\n  getPlayerImage,\r\n  searchPlayer,\r\n  resetPlayers\r\n};","import { GET_ALL } from \"./types\";\r\nimport nbaApi from \"../nbaApi\";\r\n\r\n/** Utilize redux-thunk to asynchronously get the data from\r\n *  nbaApi then create an LOAD_GAME action with the payload of data from nbaApi */\r\nfunction getAllfromApi(date) {\r\n  return async function (dispatch) {\r\n    const everything = await nbaApi.getAll({ \"dates[]\": date });\r\n    dispatch(gotAll(everything));\r\n  };\r\n}\r\n\r\nfunction gotAll(everything) {\r\n  return { type: GET_ALL, payload: everything };\r\n}\r\n\r\nexport { getAllfromApi };","import { DEDUCT_BUDGET, REFUND_BUDGET, RESET_BUDGET } from \"./types\";\r\n\r\nfunction deductBudget(budget) {\r\n    return {\r\n        type: DEDUCT_BUDGET,\r\n        payload: budget\r\n    }\r\n}\r\n\r\nfunction refundBudget(budget) {\r\n    return {\r\n        type: REFUND_BUDGET,\r\n        payload:budget\r\n    }\r\n}\r\n\r\nfunction resetBudget() {\r\n    return {\r\n        type: RESET_BUDGET\r\n    }\r\n}\r\n\r\nexport { deductBudget, refundBudget, resetBudget };","import React, { useEffect }from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Card, ListGroup } from \"react-bootstrap\";\r\nimport { getPlayerImage } from \"./actions/players\";\r\nimport \"./PlayerPerformance.css\";\r\n\r\nconst PlayerPerformance = ({ name }) => {\r\n    const dispatch = useDispatch();\r\n    const playerStat = useSelector(st => st.stats.playerStats[name]);\r\n    const image = useSelector(st => st.players[name])\r\n    useEffect(() => {\r\n        dispatch(getPlayerImage(name));\r\n    }, [dispatch, name]);\r\n    \r\n    return (\r\n        <Card className=\"player-frame\">\r\n            <Card.Img src={image} alt=\"hmm..\" />\r\n            <Card.Body>\r\n                <Card.Title><b>{name}</b></Card.Title>\r\n                <ListGroup>\r\n                    <ListGroup.Item>Points: {playerStat && playerStat.pts}</ListGroup.Item>\r\n                    <ListGroup.Item>Rebouds: {playerStat && playerStat.reb}</ListGroup.Item>\r\n                    <ListGroup.Item>Assists: {playerStat && playerStat.ast}</ListGroup.Item>\r\n                    <ListGroup.Item>Steals: {playerStat && playerStat.stl}</ListGroup.Item>\r\n                    <ListGroup.Item>Blocks: {playerStat && playerStat.blk}</ListGroup.Item>\r\n                    <ListGroup.Item>Turnovers: {playerStat && playerStat.turnover}</ListGroup.Item>\r\n                    <ListGroup.Item style={{color: \"green\"}}>Score: {playerStat && playerStat.score}</ListGroup.Item>\r\n                </ListGroup>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default PlayerPerformance;","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport { loadDate } from \"./actions/date\";\r\nimport { getAllfromApi } from \"./actions/all\";\r\nimport {\r\n    removeLineup,\r\n    resetLineup,\r\n    getPlayersByLineupId,\r\n    saveCurrentLineupId\r\n} from \"./actions/lineups\";\r\nimport { resetBudget, deductBudget } from \"./actions/budget\";\r\nimport PlayerPerformance from \"./PlayerPerformance\";\r\nimport \"./HomeLineup.css\";\r\n\r\n\r\nconst HomeLineup = ({ lineup }) => {\r\n    const dispatch = useDispatch();\r\n    const lineupScore = useSelector(st => st.lineups.lineupScores[lineup.id]);\r\n    const history = useHistory();\r\n    console.log(\"lineup.date\", lineup.date);\r\n    const tmp = new Date(lineup.date);\r\n    // console.log(\"date in homelineup\", tmp);\r\n    // const createdDate = tmp.toLocaleDateString('en-US');\r\n    // const year = createdDate.split('/')[2];\r\n    // const month = createdDate.split('/')[0];\r\n    // const day = createdDate.split('/')[1];\r\n    // const year = tmp.getFullYear();\r\n    // const month = tmp.getMonth() + 1;\r\n    // const day = tmp.getDate();\r\n    const year = lineup.date.split('-')[0];\r\n    const month = lineup.date.split('-')[1];\r\n    const day = lineup.date.split('-')[2].split('T')[0];\r\n    const fullDate = `${year}-${month}-${day}`;\r\n    // console.log(\"fullDate in homelineup\", fullDate);\r\n    const edit = () => {\r\n        dispatch(loadDate(fullDate));\r\n        dispatch(getAllfromApi(fullDate));\r\n        dispatch(resetBudget());\r\n        dispatch(deductBudget(lineup.total_value));\r\n        dispatch(resetLineup());\r\n        dispatch(saveCurrentLineupId(lineup.id));\r\n        dispatch(getPlayersByLineupId(lineup.id));\r\n        history.push(\"/edit-lineup\");        \r\n    }\r\n    const remove = () => {\r\n        dispatch(removeLineup(lineup.id));\r\n    }\r\n    let players = [];\r\n    for (let key in lineup) {\r\n        if (key.includes(\"player\") && lineup[key]) {\r\n            players.push(lineup[key]);\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"home-lineup-container\">\r\n            <section className=\"player-container\">\r\n            {players.map(name => {\r\n                return <PlayerPerformance name={name} key={uuid()} />\r\n            })}\r\n            </section>\r\n            <section className=\"cost-score-container\">\r\n                <div className=\"cost\"><b>Total Cost: {lineup.total_value}</b></div>\r\n                <div className=\"score\"><b>Lineup Score: {lineupScore || 0}</b></div>\r\n            </section>            \r\n            <button onClick={edit}>Edit lineup</button>\r\n            <button onClick={remove}>Remove this lineup</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomeLineup;","import React, {useEffect} from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getLineupsOnDate } from \"./actions/lineups\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport HomeLineup from \"./HomeLineup\";\r\n\r\nconst HomeLineupList = () => {\r\n    const date = useSelector(st => st.date.date);\r\n    const lineupsOnDate = useSelector(st => st.lineups.lineupsOnDate);\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        dispatch(getLineupsOnDate(date));\r\n    }, [dispatch, date]);\r\n\r\n    return (\r\n        <div>\r\n            <h2>Lineups on {date}</h2>\r\n            {lineupsOnDate.map(lineup => {\r\n                return <HomeLineup lineup={lineup} key={uuid()} />\r\n            })}\r\n        </div>\r\n    )\r\n}\r\nexport default HomeLineupList;","import {\r\n    GET_PLAYER_STATS,\r\n    GET_ALL_STATS_AND_SCORES,\r\n    RESET_PLAYER_STATS\r\n} from \"./types\";\r\nimport nbaApi from \"../nbaApi\";\r\n\r\n// function addPlayerScoreToLineupScore(id, playerScore) {\r\n//     return {\r\n//         type: ADD_PLAYER_SCORE_TO_LINEUP_SCORE,\r\n//         payload: {id, playerScore}\r\n//     }\r\n// }\r\n\r\nfunction getPlayerStats(name, date) {\r\n    return async function (dispatch) {\r\n        const stats = await nbaApi.getPerformance(name, date);\r\n        dispatch(gotPlayerStats(stats));\r\n    }\r\n}\r\n\r\nfunction gotPlayerStats(stats) {\r\n    return { type: GET_PLAYER_STATS, payload: stats };\r\n}\r\n\r\nfunction getAllStatsAndScores(date) {\r\n    return async function (dispatch) {\r\n        const playerStats = await nbaApi.getAllPerformance(date);\r\n        dispatch(gotAllStatsAndScore(playerStats));\r\n    }\r\n}\r\n\r\nfunction gotAllStatsAndScore(playerStats) {\r\n    return {\r\n        type: GET_ALL_STATS_AND_SCORES,\r\n        payload: playerStats\r\n    }\r\n}\r\n\r\nfunction resetPlayerStats() {\r\n    return { type: RESET_PLAYER_STATS };\r\n}\r\n\r\nexport {\r\n    getPlayerStats,\r\n    getAllStatsAndScores,\r\n    resetPlayerStats\r\n}","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { updateLineupScores } from \"./actions/lineups\";\r\nimport { getAllStatsAndScores } from \"./actions/stats\";\r\n\r\nconst Calculate = () => {\r\n    const date = useSelector(st => st.date.date);\r\n    const dispatch = useDispatch();\r\n    const calc = () => {\r\n        dispatch(getAllStatsAndScores(date));\r\n        dispatch(updateLineupScores(date));\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <button onClick={calc}>Calculate scores</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Calculate;","import React, { useState, useEffect } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { loadDate } from \"./actions/date\";\r\nimport { getLineupsOnDate } from \"./actions/lineups\";\r\nimport { resetPlayers } from \"./actions/players\";\r\nimport HomeLineupList from \"./HomeLineupList\";\r\nimport Calculate from \"./Calculate\";\r\n\r\nconst Home = () => {\r\n    const dispatch = useDispatch();\r\n    const [startDate, setStartDate] = useState(new Date());\r\n    const dummy = useSelector(st => st.lineups.dummy);\r\n    useEffect(() => {\r\n        if (startDate) {\r\n            let year = startDate.getFullYear() || 2020;\r\n            let month = startDate.getMonth() + 1 || 0;\r\n            let day = startDate.getDate() || 1;\r\n            let fullDate = `${year}-${month}-${day}`;\r\n            dispatch(loadDate(fullDate));\r\n            dispatch(getLineupsOnDate(fullDate));\r\n            dispatch(resetPlayers());\r\n        } else {\r\n            dispatch(loadDate(startDate));\r\n            dispatch(getLineupsOnDate(startDate));\r\n            dispatch(resetPlayers());\r\n        }    \r\n    }, [startDate, dispatch, dummy]);\r\n    return (\r\n        <div>\r\n            <h1>Welcome to NBA Fantasy Lite</h1>\r\n            <DatePicker selected={startDate} onChange={date => setStartDate(date)} />\r\n            <Link to=\"/games\">Get games on this date</Link>\r\n            <HomeLineupList />\r\n            <Calculate />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import { LOAD_GAMES, GET_GAMES_ON_DATE } from \"./types\";\r\nimport nbaApi from \"../nbaApi\";\r\n\r\n/** Utilize redux-thunk to asynchronously get the data from\r\n *  nbaApi then create an LOAD_GAME action with the payload of data from nbaApi */\r\nfunction getGamesFromAPI(date) {\r\n  return async function (dispatch) {\r\n    const games = await nbaApi.getGames({ \"dates[]\": date });\r\n    dispatch(gotGames(games));\r\n  };\r\n}\r\n\r\nfunction gotGames(games) {\r\n  return { type: LOAD_GAMES, payload: games };\r\n}\r\n\r\nfunction getGamesOnDate(date) {\r\n  return async function (dispatch) {\r\n    const games = await nbaApi.getGamesOnDate(date);\r\n    dispatch(getGamesFromDB(games));\r\n  }\r\n}\r\n\r\nfunction getGamesFromDB(games) {\r\n  return { type: GET_GAMES_ON_DATE, payload: games };\r\n}\r\n\r\n\r\nexport { getGamesFromAPI, getGamesOnDate };","import React from \"react\";\r\nimport \"./Game.css\";\r\nimport { Card } from \"react-bootstrap\";\r\n\r\nconst Game = ({data}) => {\r\n    return (\r\n        <div className=\"game\">\r\n            <Card>\r\n                <h3>Visitor Team: {data.visitor_team.full_name}</h3>\r\n                <img src={data.visitorteam_logo} alt=\"logo not found\" width=\"100px\" height=\"100px\" />\r\n                <span><b>@</b></span>\r\n                <h3>Home Team: {data.home_team.full_name}</h3>\r\n                <img src={data.hometeam_logo} alt=\"logo not found\" width=\"100px\" height=\"100px\"/>                \r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Game;","import React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getGamesFromAPI } from \"./actions/games\";\r\nimport Game from \"./Game\";\r\nimport \"./GameList.css\";\r\n\r\n\r\nconst GameList = () => {\r\n    const games = useSelector(st => st.games[\"games\"]);\r\n    const date = useSelector(st => st.date[\"date\"]);       \r\n    const dispatch = useDispatch();\r\n    let missing = !games;\r\n\r\n    useEffect(() => {\r\n        dispatch(getGamesFromAPI(date));\r\n    }, [missing, dispatch, date]);\r\n\r\n\r\n    if (missing) return \"No games on this date.\";\r\n\r\n    return (\r\n        <div>\r\n            <h1>Game List on {date}</h1>\r\n            <section className=\"container\">\r\n                {games.map(game => {\r\n                    return <Game data={game} key={game.id}/>\r\n                })}\r\n            </section>\r\n            <Link to=\"/players\">Players List</Link>\r\n            <Link to=\"/\">Go Home</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GameList;","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { addToLineup, removeFromLineup } from \"./actions/lineups\";\r\nimport { refundBudget, deductBudget} from \"./actions/budget\";\r\nimport \"./Player.css\";\r\n// import players from \"./reducers/players\";\r\n\r\nconst check = (arr, name) => {\r\n    if (arr.length < 1) {\r\n        return false;\r\n    }\r\n    for (let i of arr) {\r\n        if (i) {\r\n            if (i.name === name) {\r\n                return true;\r\n            }    \r\n        }    \r\n    }\r\n    return false;\r\n}\r\n\r\nconst Player = ({ data }) => {\r\n    const playersInLineup = useSelector(st => st.lineups.currentLineup);\r\n    const budget = useSelector(st => st.budget[\"currentBudget\"]);\r\n    const dispatch = useDispatch();\r\n    const add = () => {\r\n        dispatch(addToLineup(data));\r\n        dispatch(deductBudget(data.value));\r\n    }\r\n    const remove = () => {\r\n        dispatch(removeFromLineup(data));\r\n        dispatch(refundBudget(data.value));\r\n    }\r\n    let selected = check(playersInLineup, data.name);\r\n    let button;\r\n    if (selected) {\r\n        button = <button onClick={remove}>Remove from lineup</button>\r\n    } else {\r\n        if (playersInLineup.length >= 10) {\r\n            button = <button>Lineup is full</button>\r\n        } else if (data.value > budget) {\r\n            button = <button>Insufficient Fund</button>\r\n        } else {\r\n            button = <button onClick={add}>Add to lineup</button>\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <div className=\"player\">\r\n            <img src={data.image} alt=\"./images/bball_avator.webp\"/>\r\n            <h3>Name: {data.name}</h3>\r\n            <h4>Points per game: {data.points}</h4>\r\n            <h4>Rebounds per game: {data.rebounds}</h4>\r\n            <h4>Assists per game: {data.assists}</h4>\r\n            <h4>Steals per game: {data.steals}</h4>\r\n            <h4>Blocks per game: {data.blocks}</h4>\r\n            <h4>Turnovers per game: {data.turnovers}</h4>            \r\n            <h4>Team: {data.team}</h4>\r\n            <h4>Value: {data.value}</h4>\r\n            {/* {!selected && <button onClick={add}>Add to lineup</button>}\r\n            {selected && <button onClick={remove}>Remove from lineup</button>} */}\r\n            {button}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Player;","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { removeFromLineup } from \"./actions/lineups\";\r\nimport { refundBudget} from \"./actions/budget\";\r\nimport \"./Player.css\";\r\n\r\nconst LineupPlayer = ({ data }) => {\r\n    const dispatch = useDispatch();\r\n    const remove = () => {\r\n        dispatch(removeFromLineup(data));\r\n        dispatch(refundBudget(data.value));\r\n    }\r\n    return (\r\n        <div className=\"lineup\">\r\n            <img src={data.image} alt=\"./images/bball_avator.webp\"/>\r\n            <h3>Name: {data.name}</h3>\r\n            <h4>Team: {data.team}</h4>\r\n            <h4>Value: {data.value}</h4>\r\n            <button onClick={remove}>Remove from lineup</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LineupPlayer;","import { useSelector, useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { v4 as uuid }from \"uuid\";\r\nimport LineupPlayer from \"./LineupPlayer\";\r\nimport { addLineupToDB, editLineup } from \"./actions/lineups\";\r\nimport \"./Lineup.css\";\r\n\r\nconst Lineup = ({editting = false}) => {\r\n    const history = useHistory();\r\n    const playersInLineup = useSelector(st => st.lineups.currentLineup);\r\n    console.log(\"playersInLineup\", playersInLineup);\r\n    const date = useSelector(st => st.date.date);\r\n    const lineupId = useSelector(st => st.lineups.currentLineupId);\r\n    const dispatch = useDispatch();\r\n    async function add() {\r\n        await dispatch(addLineupToDB(playersInLineup, date));\r\n        history.push(\"/\");\r\n    }\r\n    async function edit() {\r\n        await dispatch(editLineup(lineupId, playersInLineup, date));\r\n        history.push(\"/\");\r\n    }\r\n    return (\r\n        <div className=\"lineup-container\">\r\n            {playersInLineup.map(player => {\r\n                return <LineupPlayer data={player} key={uuid()}/>\r\n            })}\r\n            {editting && playersInLineup.length >=1 && <button onClick={edit}>Save Editted Lineup</button>}\r\n            {!editting && playersInLineup.length >= 1 && <button onClick={add}>Submit lineup</button>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Lineup;","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { searchPlayer } from \"./actions/players\";\r\n\r\nconst Search = () => {\r\n    const dispatch = useDispatch();\r\n    const INITIAL_STATE = {\r\n        playerName: '',\r\n        lowerValueBound: 1,\r\n        upperValueBound: 200\r\n    };\r\n    const [formData, setFormData] = useState(INITIAL_STATE);\r\n    // let criteria = {};\r\n    const search = (e) => {\r\n        // console.log(\"name, value\", e.target.name, e.target.value);\r\n        const { name, value } = e.target;\r\n        setFormData({ ...formData, [name]: value });\r\n        // criteria[name] = value;\r\n        // console.log(\"criteria\", criteria);\r\n        let criteria = {};\r\n        if (name === 'playerName') {\r\n            criteria[name] = value;\r\n            criteria['lowerValueBound'] = formData.lowerValueBound;\r\n            criteria['upperValueBound'] = formData.upperValueBound;\r\n        } else if (name === 'lowerValueBound') {\r\n            criteria[name] = value;\r\n            criteria['playerName'] = formData.playerName;\r\n            criteria['upperValueBound'] = formData.upperValueBound;\r\n        } else {\r\n            criteria[name] = value;\r\n            criteria['lowerValueBound'] = formData.lowerValueBound;\r\n            criteria['playerName'] = formData.playerName;\r\n        }\r\n        // console.log(\"criteria\", criteria);\r\n        dispatch(searchPlayer(criteria));\r\n    }\r\n\r\n\r\n    // const valueSearchLow = (e) => {\r\n    //     // console.log(\"name, value\", e.target.name, e.target.value);\r\n    //     const { name, value } = e.target;\r\n    //     setFormData({ ...formData, [name]: value });\r\n    //     dispatch(searchPlayerByLowerValue(value));\r\n    // }\r\n\r\n    // const valueSearchUp = (e) => {\r\n    //     // console.log(\"name, value\", e.target.name, e.target.value);\r\n    //     const { name, value } = e.target;\r\n    //     setFormData({ ...formData, [name]: value });        \r\n    // }\r\n\r\n    return (\r\n        <form>\r\n            <h3>Player Search</h3>\r\n            <label>Player Name\r\n                <input type=\"text\" name=\"playerName\" value={formData.playerName} onChange={search}/>\r\n            </label>\r\n            <label>Value Range\r\n                <input type=\"number\" name=\"lowerValueBound\" min=\"1\" max=\"200\" value={formData.lowerValueBound} onChange={search} />\r\n                <input type=\"number\" name=\"upperValueBound\" min=\"1\" max=\"200\" value={formData.upperValueBound} onChange={search} />\r\n            </label>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default Search;","import React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { v4 as uuid }from \"uuid\";\r\nimport { getPlayersOnDateFromAPI } from \"./actions/players\";\r\nimport { resetLineup } from \"./actions/lineups\";\r\nimport { resetBudget } from \"./actions/budget\";\r\nimport Game from \"./Game\";\r\nimport Player from \"./Player\";\r\nimport Lineup from \"./Lineup\";\r\nimport Search from \"./Search\";\r\nimport \"./PlayerList.css\";\r\n\r\n\r\nconst PlayerList = () => {\r\n    const games = useSelector(st => st.games[\"games\"]);\r\n    const date = useSelector(st => st.date[\"date\"]);\r\n    const allPlayers = useSelector(st => st.players[\"playersOnDate\"]);\r\n    const searchedPlayers = useSelector(st => st.players[\"searchedPlayers\"]);\r\n    const players = (searchedPlayers ? searchedPlayers : allPlayers);\r\n    const budget = useSelector(st => st.budget[\"currentBudget\"]);\r\n    // console.log(\"date\", date);            \r\n    const dispatch = useDispatch();\r\n    let missing = !players;\r\n\r\n    useEffect(() => {\r\n        dispatch(getPlayersOnDateFromAPI(date));\r\n        dispatch(resetLineup());\r\n        dispatch(resetBudget());\r\n    }, [missing, dispatch, date]);\r\n\r\n    if (missing) return \"loading\";\r\n\r\n    return (\r\n        <div>\r\n            <h1>Game List on {date}</h1>\r\n            <section className=\"game-container\">            \r\n            {games.map(game => {\r\n                return <Game data={game} key={game.id}/>\r\n            })}\r\n            </section>\r\n            <h1>Players on {date}</h1>\r\n            <h2>Budget: {budget}</h2>\r\n            <Search date={date}/>\r\n            <section className = \"player-container\">                      \r\n                {players.map(player => {\r\n                    return <Player data={player} key={uuid()}/>\r\n                })}\r\n            </section>\r\n            <h1>Your Lineup</h1>\r\n            <section className=\"list-container\">            \r\n                <Lineup />\r\n            </section>\r\n            <Link to=\"/\">Go Home</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlayerList;","import React, {useEffect} from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport { getPlayersOnDateFromAPI } from \"./actions/players\";\r\nimport Game from \"./Game\";\r\nimport Player from \"./Player\";\r\nimport Lineup from \"./Lineup\";\r\nimport Search from \"./Search\";\r\nimport \"./EditLineupPlayerList.css\";\r\n\r\nconst EditLineupPlayerList = () => {\r\n    const dispatch = useDispatch();\r\n    const games = useSelector(st => st.all.games);\r\n    const date = useSelector(st => st.date[\"date\"]);\r\n    console.log(\"date in editLineup\", date);\r\n    const allPlayers = useSelector(st => st.all.players);\r\n    const searchedPlayers = useSelector(st => st.players[\"searchedPlayers\"]);\r\n    const players = (searchedPlayers ? searchedPlayers : allPlayers);\r\n    const budget = useSelector(st => st.budget[\"currentBudget\"]);\r\n    let missing = !players;\r\n\r\n    useEffect(() => {\r\n        dispatch(getPlayersOnDateFromAPI(date));\r\n    }, [missing, dispatch, date, searchedPlayers]);\r\n\r\n    if (missing) return \"loading\";\r\n\r\n    return (\r\n        <div>\r\n            <h1>Game List on {date}</h1>\r\n            <section className=\"games-container\">\r\n            {games.map(game => {\r\n                return <Game data={game} key={game.id}/>\r\n            })}\r\n            </section>\r\n            <h1>Players on {date}</h1>\r\n            <h2>Budget: {budget}</h2>\r\n            <Search date={date}/>\r\n            <section className=\"players-container\">                \r\n                {players.map(player => {\r\n                    return <Player data={player} key={uuid()}/>\r\n                })}\r\n            </section>\r\n            <h1>Your Lineup</h1>\r\n            <section>\r\n                <Lineup editting={true}/>\r\n            </section>\r\n            <Link to=\"/\">Go Home</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditLineupPlayerList;","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport Home from \"./Home\";\nimport GameList from \"./GameList\";\nimport PlayerList from \"./PlayerList\";\nimport EditLineupPlayerList from \"./EditLineupPlayerList\";\n\n/**Routes that direct to different pages */\nfunction Routes() {\n  return (\n    <Switch>\n      <Route exact path=\"/\">\n        <Home />\n      </Route>\n      {/* <Route exact path=\"/films/:id\">\n        <Film />\n      </Route> */}\n      <Route exact path=\"/games\">\n        <GameList />\n      </Route>\n      <Route exact path=\"/players\">\n        <PlayerList />\n      </Route>\n      <Route exact path=\"/edit-lineup\">\n        <EditLineupPlayerList />\n      </Route>\n      <Route>\n        <div>Page not found.</div>\n      </Route>\n    </Switch>\n  );\n}\n\nexport default Routes;\n","import './App.css';\nimport Routes from \"./Routes\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Routes />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { LOAD_DATE, RESET_ALL } from \"../actions/types\";\r\n\r\nconst INITIAL_STATE = {};\r\n\r\n/** action to reset EVERYTHING and add games into state*/\r\nfunction date(state = INITIAL_STATE, action) {\r\n  switch (action.type) {\r\n    case RESET_ALL:\r\n      return { ...INITIAL_STATE };\r\n\r\n    case LOAD_DATE:\r\n      return {\r\n        ...state,\r\n        \"date\": action.payload\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default date;","import { GET_GAMES_ON_DATE, LOAD_GAMES, RESET_ALL } from \"../actions/types\";\r\n\r\nconst INITIAL_STATE = {};\r\n\r\n/** action to reset EVERYTHING and add games into state*/\r\nfunction games(state = INITIAL_STATE, action) {\r\n  switch (action.type) {\r\n    case RESET_ALL:\r\n      return { ...INITIAL_STATE };\r\n\r\n    case LOAD_GAMES:\r\n      return {\r\n        ...state,\r\n        games: [ ...action.payload ]\r\n      };\r\n    \r\n    case GET_GAMES_ON_DATE:\r\n      return {\r\n        ...state,\r\n        games: [...action.payload]\r\n      }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default games;","import {\r\n  GET_PLAYERS_ON_DATE,\r\n  GET_PLAYER_BY_NAME,\r\n  RESET_PLAYERS,\r\n  GET_PLAYER_IMAGE,\r\n  SEARCH_PLAYER\r\n} from \"../actions/types\";\r\n\r\nconst INITIAL_STATE = {\r\n  playersOnDate: []\r\n};\r\n\r\nfunction players(state = INITIAL_STATE, action) {\r\n  switch (action.type) {\r\n    case RESET_PLAYERS:\r\n      delete state.searchedPlayers;\r\n      return {\r\n        ...state\r\n      };\r\n    \r\n    case SEARCH_PLAYER:\r\n      let lowerCaseSearchTerm = action.payload.playerName.toLowerCase();\r\n      let playersWithNameMatch = state.playersOnDate.filter(player => {\r\n        let lowerCasePlayerName = player.name.toLowerCase();\r\n        return lowerCasePlayerName.includes(lowerCaseSearchTerm);\r\n      });\r\n      let playersWithinValueRange = playersWithNameMatch.filter(player =>\r\n        player.value >= action.payload.lowerValueBound && player.value <= action.payload.upperValueBound\r\n      )\r\n      return {\r\n        ...state,\r\n        searchedPlayers: playersWithinValueRange\r\n      };\r\n\r\n    case GET_PLAYERS_ON_DATE:\r\n      return {\r\n        ...state,\r\n        \"playersOnDate\": [ ...action.payload ]\r\n      };\r\n    \r\n    case GET_PLAYER_BY_NAME:\r\n      return {\r\n        ...state,\r\n        searchedPlayer:action.payload\r\n      }\r\n    \r\n    case GET_PLAYER_IMAGE:\r\n      return {\r\n        ...state,\r\n        [action.payload.name]: action.payload.image\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default players;","import {\r\n    GET_LINEUPS_ON_DATE,\r\n    GET_PLAYERS_BY_LINEUP_ID,\r\n    EDIT_LINEUP,\r\n    UPDATE_LINEUP_SCORES,\r\n    SAVE_CURRENT_LINEUP_ID,\r\n    ADD_TO_LINEUP,\r\n    ADD_LINEUP_TO_DB,\r\n    REMOVE_LINEUP_FROM_DB,\r\n    REMOVE_FROM_LINEUP,\r\n    RESET_LINEUP } from \"../actions/types\";\r\n\r\n\r\nconst INITIAL_STATE = {\r\n    currentLineup: [],\r\n    lineupsOnDate: [],\r\n    lineupScores: {},\r\n    dummy: true\r\n};\r\n\r\nfunction lineups(state = INITIAL_STATE, action) {\r\n    switch (action.type) {\r\n        case RESET_LINEUP:\r\n            return { ...INITIAL_STATE };\r\n        case GET_LINEUPS_ON_DATE:\r\n            return { ...state, lineupsOnDate: [...action.payload] };\r\n        case GET_PLAYERS_BY_LINEUP_ID:\r\n            return { ...state, currentLineup: [...action.payload] };\r\n        case UPDATE_LINEUP_SCORES:\r\n            // console.log(\"action.payload in UPDATE_LINEUP_SCORES\", action.payload);\r\n            return {\r\n                ...state,\r\n                dummy: !state.dummy,\r\n                lineupScores: action.payload\r\n            };\r\n        case SAVE_CURRENT_LINEUP_ID:\r\n            return { ...state, currentLineupId: action.payload };\r\n        case REMOVE_LINEUP_FROM_DB:\r\n            let newLineupsOnDate = state.lineupsOnDate.filter(lineup => lineup.id !== action.payload);\r\n            return { ...state, lineupsOnDate: [...newLineupsOnDate] };\r\n        case ADD_TO_LINEUP:\r\n            return {\r\n                ...state,\r\n                currentLineup: [...state.currentLineup, action.payload]\r\n            }\r\n        case REMOVE_FROM_LINEUP:\r\n            let lineupCopy = [...state.currentLineup];\r\n            let idx = 0;\r\n            for (let player of lineupCopy) {\r\n                if (player.name === action.payload.name) {\r\n                    break;\r\n                }\r\n                idx += 1;\r\n            }\r\n            let modLineup = lineupCopy.slice(0, idx).concat(lineupCopy.slice(idx + 1));\r\n            return {\r\n                ...state,\r\n                currentLineup:[...modLineup]\r\n            }\r\n        case ADD_LINEUP_TO_DB:\r\n            return state;\r\n        case EDIT_LINEUP:\r\n            return { ...state, dummy: !state.dummy } ;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default lineups;","import { REFUND_BUDGET, DEDUCT_BUDGET, RESET_BUDGET } from \"../actions/types\";\r\n\r\nconst INITIAL_STATE = {\r\n    currentBudget: 200\r\n};\r\n\r\nfunction budget(state = INITIAL_STATE, action) {\r\n    switch (action.type) {\r\n        case RESET_BUDGET:\r\n            return { ...INITIAL_STATE };\r\n        case REFUND_BUDGET:\r\n            return {\r\n                ...state,\r\n                currentBudget: state.currentBudget + action.payload\r\n            }\r\n        case DEDUCT_BUDGET:\r\n            return {\r\n                ...state,\r\n                currentBudget: state.currentBudget - action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default budget;","import {\r\n    GET_PLAYER_STATS,\r\n    GET_ALL_STATS_AND_SCORES,\r\n    RESET_PLAYER_STATS\r\n} from \"../actions/types\";\r\n\r\n\r\nconst INITIAL_STATE = {\r\n    playerStats: []\r\n};\r\n\r\nfunction stats(state = INITIAL_STATE, action) {\r\n    switch (action.type) {\r\n        case RESET_PLAYER_STATS:\r\n            return { ...INITIAL_STATE };\r\n        case GET_PLAYER_STATS:\r\n            let name = action.payload.name;\r\n            return {\r\n                ...state,\r\n                [name] : action.payload\r\n            };\r\n        case GET_ALL_STATS_AND_SCORES:\r\n            return {\r\n                ...state,\r\n                playerStats: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default stats;","import { GET_ALL, RESET_ALL } from \"../actions/types\";\r\n\r\nconst INITIAL_STATE = {};\r\n\r\n/** action to reset EVERYTHING and add games into state*/\r\nfunction all(state = INITIAL_STATE, action) {\r\n  switch (action.type) {\r\n    case RESET_ALL:\r\n      return { ...INITIAL_STATE };\r\n\r\n    case GET_ALL:\r\n      return {\r\n        ...state,\r\n          games: [...action.payload.everything.games],\r\n          teams: [...action.payload.everything.teams],\r\n          players: [...action.payload.everything.players]\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default all;","import { combineReducers } from \"redux\";\r\nimport date from \"./date\";\r\nimport games from \"./games\";\r\nimport players from \"./players\";\r\nimport lineups from \"./lineups\";\r\nimport budget from \"./budget\";\r\nimport stats from \"./stats\";\r\nimport all from \"./all\";\r\n\r\n/**Combine all reducers */\r\nexport default combineReducers({\r\n    date,\r\n    games,\r\n    players,\r\n    lineups,\r\n    budget,\r\n    stats,\r\n    all\r\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nimport { BrowserRouter } from 'react-router-dom';\nimport { createStore, applyMiddleware} from 'redux';\nimport { Provider } from 'react-redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from \"redux-thunk\";\nimport rootReducer from './reducers/rootReducer';\n\n\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}